---
import { getCollection } from "astro:content";
import Layout from "./Layout.astro";
import Window from "../components/Window.svelte";
import Posts from "../components/Posts.svelte";
import Webring from "../components/Webring.svelte";

const { title, description, tags, posts, activeTag } = Astro.props;
const url = Astro.url;
---

<Layout title={title} description={description}>
	<div class="layout__grid blog">
		<h1>
			<span class="page-title">Blog</span>
			{
				activeTag && (
					<p class="page-subtitle h3">
						<span class="page-subtitle__text">Tagged with "{activeTag}"</span>
					</p>
				)
			}
		</h1>

		<div class="layout__cell blog__posts">
			<Window title="Posts" titleTag="span" order={0} client:load>
				<div class="blog__header">
					<h2>Posts</h2>
					<a href="/feed.xml" class="blog__header-feed">
						<span class="visually-hidden">RSS feed</span>
						<svg class="blog__header-icon" role="presentation">
							<use href={`#icon-rss`}></use>
						</svg>
					</a>
				</div>
				<Posts posts={posts} />
			</Window>
		</div>

		<div class="layout__cell blog__tags">
			<Window title="Tags" style="--max-width: 40ch" order={1} client:load>
				<ul class="tags">
					{
						tags.map((tag) => (
							<li class="tag__item">
								<a
									class="button--ui"
									href={`/blog/tagged/${tag}/`}
									aria-current={activeTag === tag ? "page" : false}>
									<span class="button--ui__content">{tag}</span>
								</a>
							</li>
						))
					}
				</ul>
			</Window>
		</div>

		<div class="layout__cell blog__webring">
			<Window
				title="Webring"
				style="--inline-start: 3rem;"
				order={2}
				client:load>
				<Webring />
			</Window>
		</div>
	</div>
</Layout>

<style lang="scss">
	h1 {
		margin-block-end: 0.5rem;
	}

	.page-subtitle__text {
		display: inline-block;
		--border-color: currentColor;
		padding: calc(var(--border-thickness) * 2);
		inline-size: fit-content;
		position: relative;
		z-index: 1;
		background-color: var(--color-lavender);
		color: var(--color-violet-darker);
		@include pixel-borders();
	}

	.tags {
		display: flex;
		flex-wrap: wrap;
		list-style: none;
		margin: 0;
		padding-inline-start: var(--border-thickness);
		padding-block-start: calc(var(--border-thickness) * 2);
	}

	.tag__item {
		margin-block-start: calc(var(--border-thickness) * -1);
		margin-inline-start: calc(var(--border-thickness) * -1);
	}

	.blog__header {
		display: flex;
		align-items: center;
		justify-content: space-between;
	}

	.blog__header-feed {
		display: flex;
		align-items: center;
		justify-content: center;
		inline-size: 2.5rem;
		block-size: 2.5rem;
		color: var(--color-text-accent);

		&:hover {
			color: currentColor;
		}
	}

	.blog__header-icon {
		inline-size: var(--space-s);
		block-size: var(--space-s);
		vertical-align: center;
	}

	@media (min-width: 62em) {
		.blog {
			grid-template-rows: auto 1fr 2fr;
			grid-template-columns: min(60%, 80ch) 1fr;
			gap: 1rem;
		}

		h1 {
			margin-block-end: 0;
		}

		.blog__tags {
			grid-row: 1/ 3;
			align-self: start;
			justify-self: start;
		}

		.blog__webring {
			padding-inline-start: var(--space-l);
			grid-row: 3 / 4;
			align-self: start;
			justify-self: start;
		}

		.blog__posts {
			grid-column: 1;
			grid-row: 2 / 4;
		}
	}
</style>
